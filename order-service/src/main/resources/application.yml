spring:
  datasource:
    url: jdbc:postgresql://localhost:5431/order-service
    username: vladsw764
    password: password
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
  application:
    name: order-service
  config:
    import: optional:test.properties
  kafka:
    bootstrap-servers: localhost:9092
    topics:
      order: order-topic


server:
  port: 8082


logging:
  level:
    root: INFO
    com.isariev.orderservice: DEBUG
    org.springframework.transaction: DEBUG

eureka:
  client:
    service-url:
      defaultZone:
        http://eureka:password@localhost:8761/eureka
#
### Resilience4J Configuration
#resilience4j:
#  circuitbreaker:
#    instances:
#      order-service:
#        failureRateThreshold: 50
#        waitDurationInOpenState: 5s
#        permittedNumberOfCallsInHalfOpenState: 3
#        minimumNumberOfCalls: 5
#        slidingWindowType: COUNT_BASED
#        slidingWindowSize: 10
#        eventConsumerBufferSize: 10
#        registerHealthIndicator: true
#  retry:
#    instances:
#      order-service:
#        maxAttempts: 3
#        waitDuration: 1s
#  timelimiter:
#    instances:
#      order-service:
#        timeoutDuration: 5s
#        cancelRunningFuture: true

management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    circuitbreakers:
      enabled: true
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0

#logger
rest:
    methods:
      logger:
        enabled: true
service:
    methods:
      logger:
        enabled: false